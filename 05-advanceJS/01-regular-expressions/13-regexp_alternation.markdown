# Детальний конспект: Альтернація в регулярних виразах

## Загальна інформація

- **Опис**: Альтернація (`|`) у регулярних виразах дозволяє зіставляти один із кількох шаблонів, подібно до логічного "АБО".
- **Контекст**: Використовується для пошуку альтернативних варіантів (наприклад, різні формати дати, слова).
- **Основні компоненти**:
  - **Оператор `|`**: Зіставляє шаблон зліва або справа.
  - **Групування**: Часто використовується з `(...)` для чіткості.
- **Особливості**:
  - Альтернація має нижчий пріоритет, ніж інші оператори.
  - Може впливати на продуктивність при великій кількості варіантів.

## Приклади коду

### 1. Проста альтернація

Пошук "cat" або "dog".

```javascript
const str = "cat and dog";
const regex = /cat|dog/g;
console.log(str.match(regex)); // ["cat", "dog"]
```

### 2. Альтернація з групами

Пошук "http" або "https".

```javascript
const str = "http://site.com https://site.com";
const regex = /(http|https):\/\//g;
console.log(str.match(regex)); // ["http://", "https://"]
```

### 3. Альтернація в наборі

Альтернатива набору символів.

```javascript
const str = "a b c";
const regex = /a|b|c/g;
console.log(str.match(regex)); // ["a", "b", "c"]
```

### 4. Альтернація в складному шаблоні

Пошук різних форматів дати.

```javascript
const str = "2023-12-25 12/25/2023";
const regex = /\d{4}-\d{2}-\d{2}|\d{2}\/\d{2}\/\d{4}/g;
console.log(str.match(regex)); // ["2023-12-25", "12/25/2023"]
```

## Особливості для співбесід — Питання та відповіді

### Що таке альтернація в регулярних виразах?

- **Відповідь**: Оператор `|`, що зіставляє один із кількох шаблонів.
  ```javascript
  console.log("cat".match(/cat|dog/)); // ["cat"]
  ```

### Як альтернація працює з групами?

- **Відповідь**: Групи `(...)` обмежують дію `|`, щоб зіставляти чіткі шаблони.
  ```javascript
  console.log("ab".match(/(a|b)c/)); // null
  ```

### Який пріоритет у `|`?

- **Відповідь**: Нижчий за квантифікатори та набори, тому часто потрібні дужки.
  ```javascript
  console.log("abc".match(/ab|c/)); // ["ab"]
  console.log("abc".match(/(ab)|c/)); // ["ab"]
  ```

### Чи впливає альтернація на продуктивність?

- **Відповідь**: Так, багато альтернатив можуть уповільнити обробку.
  ```javascript
  console.log("test".match(/test|exam|check/)); // ["test"]
  ```

## Поради

- **Групування**: Використовуйте `(...)` для чіткості альтернації.
- **Оптимізація**: Уникайте надмірної кількості альтернатив.
- **Тестування**: Перевіряйте на regex101.com із різними вхідними даними.
- **Простота**: Для простих альтернатив розгляньте набори `[...]` замість `|`.

## Додаткові деталі

- **Пріоритет**: `|` має нижчий пріоритет, ніж `*`, `+`, `[...]`.
- **Сумісність**: Повна підтримка у всіх браузерах.
- **Обмеження**: Велика кількість альтернатив може ускладнити вираз і знизити продуктивність.